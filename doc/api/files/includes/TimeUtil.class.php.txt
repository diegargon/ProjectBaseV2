<?php

/*
 *  Copyright @ 2016 - 2019 Diego Garcia (diego@envigo.net)
 */

/**
 *  TimeUtil
 *  Time Util
 *  @author diego@envigo.net
 *  @package ProjectBase
 *  @subpackage CORE
 */
!defined('IN_WEB') ? exit : true;

//TODO: Check user preferences

Class TimeUtil {

    /**
     * 
     * @var string
     */
    private $dateformat;

    /**
     * 
     * @var string 
     */
    private $timezone;

    /**
     *
     * @var string
     */
    private $server_timezone;

    /**
     *
     * @var string
     */
    private $date_db_format;

    /**
     * Set time defaults
     * @global array $cfg
     */
    function configTime() {
        global $cfg;
        $this->dateformat = $cfg['default_dateformat'];
        $this->timezone = $cfg['default_timezone'];
        $this->server_timezone = $cfg['server_timezone'];
        $this->date_db_format = $cfg['DEFAULT_DB_DATEFORMAT'];
        $this->setTimeZone();
    }

    /**
     * 
     * @return string
     */
    function getTimeZone() {
        return date_default_timezone_get();
    }

    /**
     * 
     * @return string|false
     */
    function getTimeNow() {
        $now = new DateTime();
        return $now->format($this->dateformat);
    }

    /**
     * 
     * @param int $timestamp
     * @return string|false
     */
    function timestampToDate($timestamp) {
        $date = new DateTime();
        $date->setTimestamp($timestamp);
        return $date->format($this->dateformat);
    }

    /**
     * 
     * @param string $db_date
     * @return string|false
     */
    function formatDbDate($db_date) {
        $date = DateTime::createFromFormat($this->date_db_format, $db_date);
        return $date->format($this->dateformat);
    }

    /**
     * get timezone identifiers
     * @return array|false
     */
    function getTzList() {
        return DateTimeZone::listIdentifiers(DateTimeZone::ALL);
    }

    /**
     * 
     */
    private function setTimeZone() {
        date_default_timezone_set($this->timezone);
    }

}

